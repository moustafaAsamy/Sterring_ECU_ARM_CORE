

#include "motor.h"
#include "pid.h"
#include "encoder.h"
#include "stdint.h"
#include "ADC.h"
#include "driverlib/sysctl.h"
void InitConsole(void);
extern void UARTprintf(const char *pcString, ...);
extern int  pid_loop(int target , int current_postion );
uint8_t encoder_reading_buffer[100]={0} ;
uint8_t set_point_buffer[10] ={0};
extern void  timer_start(void);
int sensor_Reading =0;
int control_action =0;
volatile int set__point =0;
volatile uint16_t get_ratio = 0;
extern void ButtonsInit(void);
void led_init(void);

int main()
{
    SysCtlClockSet(SYSCTL_SYSDIV_10 | SYSCTL_USE_PLL | SYSCTL_OSC_MAIN |
                      SYSCTL_XTAL_16MHZ);
    ButtonsInit();
    led_init();
    ecoder_init();
    motor_init();
    InitConsole();
    ADC_INIT();

    uint32_t i =0;
    for(i =0;i<65000;i++)
    {

    }
    set__point =-900;
    //timer_start();
     // Turn_Left(0); //CWW
    //Turn_Right(15000);//CW
    while(1)
    {
        //Turn_Right(  (1000-  control_action)   );
        get_ratio =ADC_get();
        if(get_ratio >50)
        {
            Turn_Left(1000-(get_ratio*10));
        }
        else
        {
            Turn_Right(1000-(get_ratio*10));
        }
       // Turn_Left(1000-(get_ratio*10));
        SysCtlDelay(SysCtlClockGet() / 12);
    }
}

extern  void task_t(void)
{
// sensor_Reading = ecoder_read();
 //control_action = pid_loop(set__point ,sensor_Reading);
// UARTprintf("%d \n",sensor_Reading);
// if(control_action >0)
// {
//     motor_stop();
//      Turn_Left( (1000- control_action)  );
// }
// else
// {
//     motor_stop();
//     control_action = -control_action;
//      Turn_Right(  (1000-  control_action) *13  );
// }
     if(get_ratio >0)
     {
          motor_stop();
          Turn_Left( (1000- control_action)  );
     }
     else
     {
         motor_stop();
         control_action = -control_action;
          Turn_Right(  (1000-  control_action) *13  );
     }

}


extern void task_set_point_change(void)
{
    set__point = 800;
    control_action = control_action +100;
}

